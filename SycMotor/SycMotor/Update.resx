<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAABB5JREFUeF7tmktoU0EUhlMf+KDtzcwk1WK1Kt2IKCqIr52iiPisVnRRijadm1SL
        VhdCUYrgwic+CsUuBF2IoBtxYetK3Img4MaVIOhCsIqoC5umVv9JTtI8Jmna5t7AdT74abj3zMw5M3Pm
        zgz1GQwGg8FgMBgMhpJRVXVMcC4bWcA+zJhcRI//D4QI7+ZCfuXC/qvEuP2bCRmm194Go96E4GPJ4Mck
        Y4GAXENm3oTz8H4EO5wbfEKYBRfI1HuMF7wSOuAGmXsLtdghwILBK/mF3EVFvAPn9j4EN27wGP1HVMQ7
        4BO3A6M/pAs4U3Kgvr5lNhXzBsUGz4T9zHPBJ77zdjQ7WI2iauFDmlycvOQ5tNfMWGg5NV9ehJBbVGBZ
        gbojbr+HrnIeWUbuuIuaypjSn7TOuSpstLjdh41VLbnmDvjWr9c7VB5hi/1TpSO55zzIx3U6R8qsEawz
        p8lFZ1EpgOn3UeNE2eUXdju56SxlXQQLaxjpsJncdBa3PoMo28O4fIzfXzR15wi2n4PB9kpy01mEsPeg
        0WI6oX/qG6Gm6fGNl5BvNfVnistuKuQ8SIe9aHTccwD01NfQMYuKTQE5E7OhT1N/SpgFvyrnHwlSAeeB
        Q64fhlDXPV0bKXF5kkzdAQ0WdRwu1Te7rq5zTsENGbdfkKl7uH0hoj57ujZI0dKk3ARBzx+Ib1P1TqkO
        KNmVWE1N6zy09UfXjlLZDk9Ih7yXolYgvJrMSgLqzL8p43IbmbkP7RMGk844dS2Oel+nAs4WFmcyKw/V
        1a1cOcEC4UOMRRbS45KCGfBBGzzEmNxOZt7EsiJMn2oJWcHQKjL1JsjxFl3gCclYba2cS6ZepHsG1pR3
        +uDV18Z+SYbeBGvLZV3gKXHZRaaeowLBndUGnRSXQ04tumUFq/oK5PaANug0YfpfpyLOAocsxuyDajGy
        rNASepyDVRNZin1BM+wa1f8M0OMc/P7IShx525DbZ5JSUxkB3cLfN7pgNfpeqI2SgRzcCgd/jDUsY+iQ
        U/Q6Bew68T79fDCIYLJ2aN3TUNedNJvJalQNCFXqHGrk0di3rMaTDmwiM9i1bUTH6Pbqg+mjhE46rrGZ
        sNCJ56lKZ8EIYq+f14nUaQ92V3Q2cSEdyAzbWflcazMBIU1uoqqKRI0OA+fzbkDQAT1kpka2V2ejpNYE
        MlP7+Vc6myIVxYwMUVXugMAWoOGRLEcSSjuA4DeOxhobOG1Z9mIyUx16SWNTjPrVl4GqcRcEdwIOjGY4
        xO37eJUxDRHcgwwbtSagLL2OI8TRKjwf/7IzoWGUf4IZ5M71dyGEaFsLh67BoV51OYpH2hyM3xSpdMCa
        gBHbQI8zaeiYpW54kMt3UefDDHF5G+ryB8I7Oe+ophIGg8FgMBgMBoPBYJgaPt8/EYiTjzwjfhYAAAAA
        SUVORK5CYII=
</value>
  </data>
</root>