<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="Timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAP8AAABRCAYAAAAdHnBUAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        EwAACxMBAJqcGAAAF2xJREFUeF7tnQdYVMfax6MsLE16FZTeQYo0QcACotFEE0tiizExmlhSromJ8X7e
        xJvcWGKsiA1R1KiAXdHYYu8oSmxYIvGqMSCQT0EMmHPfd52Fw3EWdmEXtsz/eX4PSpkzM3v+08tLTJqt
        6qqq1mV37ljdOXUi4NKm7OSTC+e9s2fyZ19tHfNuSvbwISt+fO2VjRm9e+SkdYk9lRoRcislLOhBWtfO
        BesHvXbg52n/+r+C3TkJJCgmJiZ11LOqKr2iq1e8Lm/d3PfwjO+mbHpneNby+Oj8Od6uxXM825cCfwKP
        gP8HyoASoAjAn+O/8fsVwFPgL0I5UDbf3/PejgkfLL918EAseRwTE1NL6Y/Llzzy1qwavuvTjxes7pN8
        ZJ6vOxq1GuBk8DcBfweNXQk8IV/x/88A2t/xebqqV+JRaEH0I9FgYmJSpZ6WP2793zOnAk8vXvTe5lFv
        ZywKC7oNRkQj0wzaLKQnJpwpyNnRk0SRiYlJWQKzBx+fO/uTdQP75cz1dquiGVBR/unSlnuvrR33uq0V
        F29hxnUwNeG8TIw4J0MxZys2qMHD2IiLMjflhjrYcP92c6KGJSVr6KAtxTeuO5FoMzExKari6wXWuenL
        h0HNvnpBkC/2zalmk5fvPdpx453suWRrC84LzGwiEnGtW7dWGH09PUkhMc7JjvocZJ6fx+Njc77/lCSF
        iYmpIUHt7nt4xncTVyZ1yaWZShF+AD5t58D1tbXk/KA2NxTpUc3cFLCV8LGzA/X5yKpeicf+uHrZjSSP
        iYmJr8tbNiXv+HDsgpQQfxxpp5pIET5v78j1hNrdDprrNMMqGz0gwsyU+8bNmRqf+YHef+atzRhGksvE
        pLuqLCsTXdqY9Qo051fN83XHaTSqaRRhqmtb7hUbS84Z+uo0gzYHZvoiyZgALX7IxreHZT968LsZyQYm
        Jt1QeXGR6MK6tQOy3xqSqazBOmzWfwB9eH8TY0ntSzNkSxDSxoT7jzu9FbA0JuLOvfO5QSRbmJi0VwU5
        O7pgDT/Xxw3nzamGUJRZHu0kNSyOyNPMpw5YGxhwE5ztqfGf5+dReXH9j6wbwKR9un30SMiuiR/NWRDk
        iyvkqAZoDFib4kh9G2he0wynboj0WnP9bK2oaUH2TvliHskyJibNVfH1AttD/5n25eLIkLu0F70p4BTd
        G/bW0KfWp5pM3eloZsLNhDTQ0pY5eOC+itISI5KNTEyaI2jWd88ePiQT+t9KX10326O9xPSWBpppej64
        SEjW4qAV3eKul9y6aUeylIlJfVV07aojNFmnL+yg3GY9nw+hv9xWjfv0jQFXCk5xaUtN75LosPv3L+T5
        kCxmYlIv3fr5QKfst4Zkq6KWl4LN40Qrc05EMY82gOMVH8kYCMRVjLePHokg2c3E1PLKW5sxeGVSl/O0
        F1aZjAVTYO1IM402YSQSSZYZ0/IAZwKu79ndlWS9zqmqsrJVZVmZgRRcF1FaWOgoBVqd7tBFci5/WGxM
        /oRJFTqZMn98anjwH7SXVJngfD0u0FGnuXpVY6inJ1mjQMsPXAdxeevmPuRjkAiMoCfl0e/3jcEIVgTL
        oqtX2j/Iv+gJeCB3Tp0IwRYEEA50vP7Tri44NkPolp+5vh+uuSAMPLN08ajTixeNIbx/ZNb0Lw7P+O5L
        PAMBgS7eD3y2T/hgZQ3jxqzOHj5kG7AdyRr2Rs6avi8fA44jq/skn07rEntVyrK4qJspYUFFUpoyIwRd
        pTs5H49Pv7l/byLJpgb19MY1r8f7d/WrKi5ihQdNx+f98BF8MHiYBTXTlckMaOYHmhpTDaIKxGA6U6h5
        EVyRx9+5187IkHMheJoYcT4E3BcQ2sakhhjzNjV0sTSTdFMQnIbEQkzKIDtryYAlMtzBhnvb0VbCu23t
        uLFgfFnrAATIc6aAzrOqZ/fTd8+eCSOv8At6vHvb0Ltv9Lr+W1wgh1Tmnw8lP2KqKHnY6ujsmRNTQvzx
        RBtqBquCUWCEJDAO3zQDeabBxTxS07wDoGmkfOLswP2j3XNwPT9uz0Vwqe+37s41YMuC9myGluHl8uzn
        af/6lrzSNSqa9nmG1PQ887OxFVRu+vIRKaEBzVLTMxiqZvOotzeQV/ulh7O/+V5ofOTJxlFZzx4c6Ux+
        Tff0S3bm68s6R92kZSCDoclseW/khif55/0K4wL/ppo/PZZ7tjeh+ln+N7OIHXRDOBC05pWeR2mZpk7g
        6ToJ0KeWxWjoMtD+jsFADg7sfY5mfISY/zlXF0wl1tBelf1WaAolYgYto9QR3CPvYCiWCRYOtL9jMJB5
        wMVovwbNX723y1/c40JHYhPtE/TrRyrjKCwGQ5NY6+/eoPkl3FjxBbGK9qjw2NGwlT26nqJlDIOhC5yn
        1P4vmD9vyiZiGc3X46Ii0fYJHyymZQaDoUtkB3o0bP7zk7cS62i2CnJ29EiNUP7WWgZDE1no7cLdjguo
        3/zXUr4n9tFMlRcX6W8fN2Y5LQOaQqqPC/djgDuXE+zJHQ334U5H+kqaUpc6+XP58DUvyk/yvYMdvbmt
        HTy51dDPmu9FD4vBaCrzvVy4VDD0Ml9XLt3PTUIa/HupjyuXAj+j/c15eEfrM//fJRdlrg5Ue13L2dFd
        WQdpYAZmQlMJzXwZDM7PNHn5tXMAdzLCh9sc5MEtkPGBMBg08P1bBYbeCO/O7lAv7ki4N3cGKpdf4F28
        GVu3BqeBv3MRfvc4VFTbocLCsPaHetf5nTrmP//FSmIjzdOBr6dOo2WiIiyB2h0zKjfS74UmUlPBD2Nf
        mDe3GEpm2rMZuglWChlgzC3QWsSKBmvnG3KYuzH82rnu/4n5/6o+MSqbe1qmeZt8iguu2Wa8nHSMlrHy
        gE1zrOGxyV4INTU/c1QBtgawJGddAt1jLpAmMboHdxhqcuwyFlLekeai9MvY8uori0cSK2mW8tZmDJ3v
        74k3ylIzuz6wtD0EJa08TShVcCXGX9IUo8WNoR2g2dP9XLkdwV6SyuWWoOZVB+4OSPq1/PB+zTo7Yfu4
        MStpGV4f86C2xVIXS1xaRjQ3t4Ft0NyjxZWhmSzydpGM8ZyI8OVuNENLUln88fn4TdVlan6Iasmtm9Yr
        k7udpWW8LBaC6XdCX76ghWr5htgf5kWNN0MzwFH23SFe3AXor7dkM76p/Ld/4q3KyxfV8zKVWwcPxKaE
        BpTSPgAai7zhQ4H+tSaUwDjYQ0sDQz2RDg4Lp880nq6hleVHDiQRy6mHctOXvzvH27Wa9kEIWQA1/V4w
        PQ6uUROopuRA7UFLD0M9wHl1NHyejI0yLUFBTIBk/Ag37+DUHv67yeNYUABUHD/UjVivZbXzo3FptA9D
        CA6w4LwoZgg1UWoONhnXBbhT08ZoGXAqDseJctWgSY8t2GMRPpJFZLioB7uztDgjOPaQ4e8mWZR2KsL3
        hWm+BkkMf/y04Io/sWDzq6K0RLx+0GsHaIkTgqZRl4G8pnA91p9LgQ+OlkZG87Ec+vE/h7XcbJAULHDQ
        vPh+4/ZcWlzlAZf3boJCDMclaM+hcXdgj5vVZSUWxI7NJzyRNT0x4QotIXxweePZKF9q5DUVnIKkpZWh
        WuZCLb8eTKYu7xMuI1/uq/zpYFx6jsvRac8UUjTt8zRiyebRvbxzPosjQx7QIi5lnqcLtzNY8/r18oCl
        PTbraOlmKB9cdbkn1Fttuou4hBeb7LS4SsEDWSe1d+SG2Ntw3a3MJXch4jXteNJykKkxF2lmyvWytuBG
        OtpyX7nSr0jDnX7Y0qTFgU/F6WNdiDVVq5sH9iXMD/Qup0VWSjrU9hfUaNBFFZyAvh0t7QzlsRxMj2vm
        1Wl67gB0Nepb/YlXuOFx6eYKXtjqaCiWFAZ4sjM/PNywhnsGaHGRcm/Yq3ncs2etiUVVoxv79nTH21r4
        keODmbIPSujmWIbb0uDegiVsH4BKWAGtKmxSq9N7hJ83DuTR4ou1PN5zgHcp0IytCHgFHN67gMe8S8PH
        7s7P0NWkxUtK+cE9dS5QUaqubNvyGt7Swk80H1wT/YuW1/ZCsClKywtG48CmNA6e0fK6JcGWxwZogtPi
        PBlM6mVsRDVyUxDptebiLcy46e6116b/FOJFjR9yf9QbR4lVlavLmzcOqM/4OH2njX37hsB5W1p+MBRj
        jb87l6umg8Jo/Cx4v2nxHmxvLbnSjGZeZWEnNpBc+CJ9JrasafFEnt667kksqxxdXP/jW7JuvMW5SnUs
        qZsT1vRvPDhdh2MntHxVF3BZsDDe2MzHY9lpZlUFWMDgTVD4bFwrg5uQaHEtXTp/CrFt01Wwa2dvWav2
        VkET7ZocI5HaDrZ6aPnDkA0uvT3SEfr0lPxUJ86CydBs/Lij8aPMTakmVSU4FvCWg40kDrgm4FrMi967
        N7zvRWLdpunG3p96zPVx+4ufcCl4sAHueBM+XBdh/X75wdNv9oXh9C89L9UJ7MbikVvCNHRtxhpfCI4D
        jHF6fgnMusAXj/uGwvTv6pKHVsTCjVPhsaORtH34uOX2EJTYwofqMrg1VJhPjLrgmg9cc9/Sq/EUgdbc
        HwFNb5opmxMTkYibQqYDaV3u8kP7uhMbK67f8y960+4jX+ztqlYbJtQF3DUmzCtGLbhaDQ9QpeWduoLH
        dOHmM346cP7dSKTawT15cTc2knQ/cKGZMO6ly+Y37mKPR7/fb7M0NvIOP9EITuNdpfQxGGzEXxa4OAXn
        6ml5pu7gjlNhegJMjalGbAhXV5eCMe+9OyttWWq/nB2bIw/u3+2/eeP6+Lk/zBzR//V+GebmZiW0v2sI
        vCIe43U2sm7BWvT1pDXEzvKr8tEj0eo+yaeFiV4T4K5RzbXm5hIUisI802U0sYkvBPej8NM01tmeasD6
        cHJq++vsWd+NKLhywfDGtfzWgB4PkZRzZ447jBs7ZrpYLK6ihSMLM319boZ7O8mAMz/u90cPPkksLb+2
        jH4ni59gZFOQp9qPyLY0uLBJmG+6Ci7rlnXppKZAa8n5KLiIJyoq4sCZk4dt0Vdg8HqX3ZJCQD9z/eok
        B3v7+7TwZNHP1kqybZjv0bsDkm6ToOXTwW+nfSNMMA548DOFQQePERfmna6B02G4iUsbZoD2htWdvfkS
        +vp6FOPJIrxj2OHL+bkKnbUH5sfWgNGuHZujLSzMy2jh0sBboLHvf463QOpO785FJNiGdX3P7iThIp76
        VhEx6oL9Wn7e6RrPa3vtGQ/KDKx7WEuytQXVeDRsbW3unTx20IFYSyFh7Y8FwJLUBW/SwpYFrv7D6dOa
        NHQLe0KCrF8lt246pYT4l0kTihsIDrOpPIWgDQ7pAtq6iQtXHfLTqchmnan/nPwhsVajBOZvhQVAfFzn
        vbTwabwMhRN2z6XxL4wPqibBydZfFRV6q/sk15yyi003vDqInxGMhsELRfgviy6ABsG+MS0/NB3+dt3p
        7s6ShTU00wkxNzd7CM19E2KvRgvML165Yklf2jNo4PkAuDeiJg2J4Y9JULK1+7NPlkgTicbHO+v4mcCQ
        D+HIsLaD9xhowgq9xoBjFvy0fuzsQDUcjT69e63DmpvYq9GCMPSvXjpvYWlhIdcUoIWBvqTrJU3DnVfi
        HpCg6IJ+fk9pArGpf4zV+I0Cb3jhvyzaDG7ikrWhRFvA6Ul+mnEtPc1wNKZMnvQPZZgfBeEYR0aEH6c9
        h0aKd635743sf54E86LKi4vMF0eF/o6JQ+Ozpn7jwbPk+C+LtoJXn6vrhSrKRFjz97ezopqNRnjHsOHw
        VY/YrEkC8xv2fbV3lvAZsvje07kmDX9MGruBBPOito0dnSFNnKauwFIXdoZo/1VeOIWnCyczSeFf1f6q
        jSXVbDR+mD1jBJhWRGzWJEE44l49e2ylPYfGzFrzV5emLXyfBFNXlzZm9ZcmjE3nNR1c9izNT21DF5r5
        NPAIMWkevG4rf80fHR05BUyrT6zWJKH5I8I7nqA9h8YyXxdp/CvKjx0MJsHUqqK0xDQ1PLgQE7UjuHZq
        gNE4cK+D9CXRNvA4Ldp+cV2Afz7DUAX6/KEhwVvFBgaGrVq1whV92PdvdP/fwsLc2sjI8DHtOTS2Bj9f
        4nupk19ZVXGRAQmmVnu+nDQTE4RHErElu01HuBJMW9DVI9mk4EGZ0rwYr8CafjBrhbW1lYO+vr412M0M
        wFV+2BJQ6FRdkUhPFN4xbDAUIn/TniPEVCSqWVJ9/50Bu0kwtXqQf9F/jpfLozVQot/W0mma5ka4GETT
        wcHfOivFdBR+i+7fbs5Uw8kiplP0t0aGhlEikQhv0nUH7AFzAAsCrJFxTEDaMqCq4MoF48DAgFxa+DQ8
        TYxqKvMBMdFvkmBqta7/qzk4F4hTU8LEMhQHb1PhG0fTwWOhGjobXpdYxev34wGaNNPRMDY2qvT28hxt
        Ymz8poGBwctgvVgACwIPwAmwAbBVYAyIASwQsHWAhYKegYG+ODo68hOo9atp4dMYaG9VJYl3l+CSF5r8
        +Znr30j1dnmmC1M1zYWsY5w1EbzZVltX6zUW/oUscRaKHdvVvp3zzbZtHb82NjaeaKCv/x5YcBDQE+gM
        hALegAuAhQHuA7DT09OzFovF5iHBHV6GbkMlLVxZpPk/H+ybmJjwTwirVlWVlXppnSOvaN0d5S0IXtXE
        N48mkwatwasaemOyKsGpTenKzQlOiu/lxwLAz9dnoaGh4XToAqApPwZGAdgsx8s18KitOKATmD0cjB8c
        GRH+FrQcymnhycLKQP/5+ExieFFV0YO6tf65lSveZ2fuKRc8OFFoIk0E14OzQ1pkc5js1sQts7h1lma+
        +jA1NX3SqVPUektLi3So2ReBHWcD04BJwITWrVqNhq7BSC8vz2FhYSFyz+nzGeVk8wzj+npMFLYu6mp3
        59DfhIliNB5tOawTZ3zYwG/D4LXbmF+KTPkJgUKgLDQ0eGd0VOSmjmGha4ODg5ZGRnScG9MpaqaPj/dp
        +B25RvWF4HmC56J9uVk9u6USu9fqwvSv57IpPeWBYya48EVoJE1jSwc21SsveC8FHjc+G/KtbSNqf1Xy
        kYs9t7RX1w2tWrV6cWHRhTHDD1wc1Os0cBw4CZwi/+dzBjhLyBVwjnCeRx7hQnaP2AvPv3aWfKUg/V0h
        krCyesQieRjORggDwX/j9zOTYs9tSIrJzQz3Lcvq4M6pA1/FR597P7H7EuSDpO5LxiYl1oD/l0XN7/V4
        zrg6JBGE35eF9PeTloxPlo9xCPn7z5MTf4R8vrwpuZaNQuDnVMjP+X8rZXMNcXXY0lM+tirINim94unw
        flcK7blCMM61aXr+vQ0JEb+tjQgqnezjVqbIiT6qxMnc7OGg6IgR8G8DYnftk4ODg4u1tXWxMPHNTUxM
        zCaIjlJ2bDFpruLj42fS3o/mBGcDPDw8okmUtFtBQUE9RCLRU0XmPpUFPtPd3f0yPN+SRIdJtyUKCQnZ
        R3tXmguoiHDWQHcUGRk5DBKu0NHGysDR0fGOpaVlexINJqaXxGKxmb+/Pw7UUd8ZVRIXF/c1iYZuCQqA
        oZDxFbRMUQVubm5XbWxscDEGE1MdGRsbW3bo0OEQ7b1RFWD8yeTxuik/P794e3v7u7TMUSbh4eE72rRp
        gxs0mJiogvdEHBsbu1z47igbeA/LoOIbTB6r27KwsLCJjo7OlHfXkyKYmZmVQgk7AR7DBveY5FJERMQA
        W1vbe7T3qakEBwfvd3JywuXATHxBs6trYGDgSVqmKYqBgUElmD4VPsS2JHgmJrllaGhoBu/Pd1hL094v
        RSCDzPlQ2+NSYFYJ1aegoKA4aH5lQK39Jy0z68PV1fV6QkLCVAcHB2cSHBNTowWFgAW8ixN9fX1PKzI7
        ha1YqICeQCsiKzQ0tB8EpdAZADovsVhsGBIS0rVbt25T4QPICggIyG3Xrl2hpaVliZWV1UM3N7cbkLFH
        wOzL4uPjx8H/fcifMjEpXVAZucH7OCIqKmo2VFBbXVxcLlhbWxdBt7XEzs7uNtTup+B9zICffwaFBW72
        MX3+l03VSy/9D8hKQvtI9vsNAAAAAElFTkSuQmCC
</value>
  </data>
</root>